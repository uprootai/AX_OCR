# Use TensorFlow GPU base image with CUDA support
FROM tensorflow/tensorflow:2.15.0-gpu

# Install system dependencies and Tesseract language packs
RUN apt-get update && apt-get install -y \
    tesseract-ocr \
    tesseract-ocr-eng \
    tesseract-ocr-kor \
    tesseract-ocr-jpn \
    tesseract-ocr-chi-sim \
    tesseract-ocr-nor \
    libleptonica-dev \
    poppler-utils \
    libgl1 \
    libglib2.0-0 \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install edocr2
RUN git clone https://github.com/javvi51/edocr2.git /app/edocr2
RUN cd /app/edocr2 && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir .

# Copy missing data directories to installed package (pip install doesn't include them)
RUN cp -r /app/edocr2/edocr2/tools/symbol_match /usr/local/lib/python3.11/dist-packages/edocr2/tools/ && \
    cp -r /app/edocr2/edocr2/tools/backgrounds /usr/local/lib/python3.11/dist-packages/edocr2/tools/ && \
    cp -r /app/edocr2/edocr2/tools/dimension_fonts /usr/local/lib/python3.11/dist-packages/edocr2/tools/ && \
    cp -r /app/edocr2/edocr2/tools/gdt_fonts /usr/local/lib/python3.11/dist-packages/edocr2/tools/

# Create symlink for hardcoded relative paths in edocr2 code
RUN cd /app/edocr2 && ln -s edocr2/tools tools

# Install API dependencies
COPY requirements_v2.txt /app/requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Copy API server
COPY api_server_edocr_v2.py /app/api_server.py

# Create directories
RUN mkdir -p /app/uploads /app/results /app/models

# Expose port
EXPOSE 5002

# Run API server
CMD ["python", "api_server.py"]
